
import { GoogleGenAI, Type } from "@google/genai";
import { createClient } from "@supabase/supabase-js";
import type { VercelRequest, VercelResponse } from '@vercel/node';
import { checkUsageLimit, logAiCall } from './_lib/ai-usage-limiter.js';
import { getExerciseById } from "./_lib/data-access.js";
import { validateMathResponse } from "./_lib/math-validator.js";
import { cleanLatex } from "../src/utils/math-format.js";

export default async function handler(req: VercelRequest, res: VercelResponse) {
    res.setHeader('Access-Control-Allow-Credentials', 'true');
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Methods', 'POST,OPTIONS');
    res.setHeader(
        'Access-Control-Allow-Headers',
        'Authorization, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version'
    );
    
    if (req.method === 'OPTIONS') {
        res.status(200).end();
        return;
    }

    if (req.method !== 'POST') {
        return res.status(405).json({ error: 'Method Not Allowed' });
    }

    const apiKey = process.env.GEMINI_API_KEY;
    const supabaseUrl = process.env.SUPABASE_URL;
    const supabaseServiceKey = process.env.SUPABASE_SERVICE_KEY;

    if (!apiKey || !supabaseUrl || !supabaseServiceKey) {
        return res.status(500).json({ error: "La configuration du serveur est incompl√®te." });
    }

    try {
        // --- User Authentication ---
        const authHeader = req.headers.authorization;
        if (!authHeader) {
            return res.status(401).json({ error: 'L\'authentification est requise.' });
        }
        const token = authHeader.split(' ')[1];
        const supabase = createClient(supabaseUrl, supabaseServiceKey);
        const { data: { user }, error: userError } = await supabase.auth.getUser(token);

        if (userError || !user) {
            return res.status(401).json({ error: 'Jeton d\'authentification invalide ou expir√©.' });
        }

        // --- Rate Limiting ---
        const { limitExceeded, limit } = await checkUsageLimit(supabase, user.id, 'ANSWER_VALIDATION');
        if (limitExceeded) {
             const error: any = new Error(`Vous avez atteint votre limite de ${limit} validations de r√©ponse par jour.`);
             error.status = 429;
             throw error;
        }
        
        // --- Main Logic ---
        let { studentAnswer, exerciseId } = req.body;
        if (!studentAnswer || !exerciseId) {
            return res.status(400).json({ error: "Les champs 'studentAnswer' et 'exerciseId' sont requis." });
        }

        // Clean the student's answer to ensure it uses standard LaTeX delimiters
        studentAnswer = cleanLatex(studentAnswer);
        
        // --- Fetch Exercise using the new optimized method ---
        const exercise = await getExerciseById(exerciseId);
        if (!exercise) {
            return res.status(404).json({ error: "Exercice non trouv√©." });
        }

        // Truncate the correction context to avoid overly long prompts
        const correctionContext = exercise.fullCorrection || exercise.correctionSnippet;
        const truncatedCorrection = correctionContext.length > 2500 ? (correctionContext.substring(0, 2500) + "\n...") : correctionContext;

        const systemInstruction = `
# PERSONA
Tu es "Prof Ayoub", un correcteur de math√©matiques pour des lyc√©ens marocains. Ton ton est expert, rigoureux, mais toujours encourageant et bienveillant. Tu utilises un fran√ßais simple et clair.

# MISSION
√âvaluer la r√©ponse d'un √©l√®ve √† un exercice de math√©matiques et fournir un feedback ultra-structur√© en JSON.

# PROCESSUS DE R√âFLEXION (Chain of Thought)
1.  **Lire et Comprendre**: Lis attentivement l'√©nonc√© de l'exercice, la correction de r√©f√©rence, et la r√©ponse de l'√©l√®ve.
2.  **Identifier les Parties Cl√©s**: D√©compose mentalement la r√©ponse de l'√©l√®ve en √©tapes logiques ou en r√©ponses aux sous-questions (ex: 1a, 1b, 2a...). Chaque √©tape deviendra un objet dans le tableau \`detailed_feedback\`.
3.  **√âvaluer Chaque Partie**: Pour chaque partie identifi√©e:
    a. Compare la logique et le r√©sultat de l'√©l√®ve √† la correction de r√©f√©rence.
    b. Choisis une √©valuation: \`correct\`, \`incorrect\`, ou \`partial\`.
    c. R√©dige une explication claire et concise. Si c'est correct, f√©licite. Si c'est incorrect, explique l'erreur SANS donner la r√©ponse compl√®te. Si c'est partiel, pointe ce qui est juste et ce qui manque.
4.  **Synth√®se Globale**: Apr√®s avoir √©valu√© toutes les parties, r√©dige un r√©sum√© (\`summary\`) qui donne une vue d'ensemble de la performance.
5.  **Conclusion Finale**: D√©termine \`is_globally_correct\`. Ce doit √™tre \`true\` si et seulement si TOUTES les parties sont \`correct\`.
6.  **Assemblage JSON**: Construis l'objet JSON final en respectant scrupuleusement le sch√©ma et les r√®gles de formatage.

# R√àGLES DE SORTIE (JSON UNIQUEMENT)

## 1. Structure JSON stricte
Ta sortie doit √™tre UNIQUEMENT un objet JSON. Pas de texte avant ou apr√®s.
Voici un exemple de la structure attendue:
\`\`\`json
{
  "is_globally_correct": false,
  "summary": "Tu as bien commenc√© le calcul de la d√©riv√©e, mais il y a une erreur de signe qui affecte le reste de ton analyse. Fais attention √† la distributivit√© !",
  "detailed_feedback": [
    {
      "part_title": "Calcul de la d√©riv√©e",
      "evaluation": "partial",
      "explanation": "La formule de d√©rivation de $x^3$ est correcte, mais tu as fait une erreur en d√©rivant $-3x$. La d√©riv√©e de $-3x$ est $-3$, et non $3$."
    },
    {
      "part_title": "Tableau de variation",
      "evaluation": "incorrect",
      "explanation": "Ton tableau de variation est incorrect car il est bas√© sur une d√©riv√©e fausse. Une fois que tu auras la bonne d√©riv√©e, pense √† bien trouver les racines et √† √©tudier le signe du polyn√¥me."
    }
  ]
}
\`\`\`

## 2. Valeurs autoris√©es pour "evaluation"
Le champ \`evaluation\` doit √™tre l'une de ces trois cha√Ænes de caract√®res, et rien d'autre : \`"correct"\`, \`"incorrect"\`, \`"partial"\`.

## 3. Formatage Math√©matique Hybride dans les textes
Pour les champs \`summary\` et \`explanation\`:
-   **Unicode par d√©faut**: Pour les symboles simples, utilise les caract√®res Unicode (ex: \`∆í(ùë•) = ùë•¬≤ ‚àí 4ùë• + 1\`, \`‚àÄùë• ‚àà ‚Ñù\`).
-   **LaTeX pour le complexe**: Utilise \`$..$\` ou \`$$..$$\` SEULEMENT pour les fractions, racines, int√©grales, etc.
-   **INTERDICTION ABSOLUE**: N'utilise JAMAIS les d√©limiteurs MathJax comme \`\\( ... \\)\` ou \`\\[ ... \\]\`.
`;

        const userPrompt = `
L'√©l√®ve a soumis sa r√©ponse √† l'exercice suivant. √âvalue-la en suivant scrupuleusement tes instructions.

--- √âNONC√â DE L'EXERCICE ---
${exercise.statement}
--- CORRECTION DE R√âF√âRENCE ---
${truncatedCorrection}
--- R√âPONSE DE L'√âL√àVE ---
${studentAnswer}
---

G√âN√àRE L'OBJET JSON MAINTENANT.
`;
        
        const answerSchema = {
            type: Type.OBJECT,
            properties: {
                is_globally_correct: {
                    type: Type.BOOLEAN,
                    description: "True si la r√©ponse globale de l'√©l√®ve est majoritairement correcte."
                },
                summary: {
                    type: Type.STRING,
                    description: "Un court bilan g√©n√©ral de la r√©ponse de l'√©l√®ve."
                },
                detailed_feedback: {
                    type: Type.ARRAY,
                    description: "Une liste de feedbacks d√©taill√©s pour chaque partie de la r√©ponse.",
                    items: {
                        type: Type.OBJECT,
                        properties: {
                            part_title: {
                                type: Type.STRING,
                                description: "Le titre de la partie √©valu√©e (ex: 'Question 1a', 'Factorisation')."
                            },
                            evaluation: {
                                type: Type.STRING,
                                description: "L'√©valuation de cette partie. Doit √™tre une de ces valeurs : 'correct', 'incorrect', 'partial'."
                            },
                            explanation: {
                                type: Type.STRING,
                                description: "L'explication d√©taill√©e pour cette partie, en Markdown et LaTeX."
                            }
                        },
                        required: ["part_title", "evaluation", "explanation"]
                    }
                }
            },
            required: ["is_globally_correct", "summary", "detailed_feedback"]
        };


        const ai = new GoogleGenAI({ apiKey: apiKey });
        const response = await ai.models.generateContent({
            model: 'gemini-2.5-flash',
            contents: userPrompt,
            config: {
                systemInstruction,
                responseMimeType: "application/json",
                responseSchema: answerSchema
            }
        });
        
        const jsonText = response.text?.trim();
        if (!jsonText) {
            throw new Error("L'IA a retourn√© une r√©ponse vide. Le mod√®le est peut-√™tre surcharg√©, veuillez r√©essayer.");
        }
        
        let parsedJson;
        try {
            parsedJson = JSON.parse(jsonText);
        } catch (e) {
            console.error("Failed to parse JSON from AI in check-answer. Raw response:", jsonText);
            throw new Error("La r√©ponse de l'IA √©tait mal format√©e. Veuillez r√©essayer.");
        }
        
        // Appliquer le nettoyage et la validation √† toute la r√©ponse JSON
        const finalResponse = validateMathResponse(parsedJson);

        // Log successful AI call
        await logAiCall(supabase, user.id, 'ANSWER_VALIDATION');
        
        return res.status(200).json(finalResponse);

    } catch (error: any) {
        console.error("Error in check-answer:", error);
        const status = error.status || 500;
        const message = error.message || "Une erreur interne est survenue.";
        return res.status(status).json({ error: message });
    }
}
